---

- name: Create Wireguard directory
  file:
    path: "{{ openwisp2_wireguard_path }}"
    state: directory
    group: "{{ openwisp_group }}"
    mode: 0770
  tags: [wireguard]

- name: update_wireguard.sh
  template:
    src: update_scripts/update_wireguard.sh.j2
    dest: "{{ openwisp2_wireguard_path }}/update_wireguard.sh"
    group: "{{ openwisp_group }}"
    mode: 0750
  tags: [wireguard, updater_script]
  notify: reload supervisor

- name: Bring up WireGuard interface on boot
  block:
    - name: "Create rc-wg.service"
      template:
        src: rc-wg/rc-wg.service
        dest: /etc/systemd/system/rc-wg.service
        mode: 0755
    - name: "Create /etc/rc.d"
      file:
        path: /etc/rc.d
        state: directory
        group: "{{ openwisp_group }}"
        mode: 0755
    - name: "Create rc-wg.local"
      lineinfile:
        path: /etc/rc.d/rc-wg.local
        state: present
        create: true
        line: "#!/bin/bash"
        insertbefore: BOF
        mode: 0755
        group: "{{ openwisp_group }}"
    - name: Add WireGuard interface bring up command
      lineinfile:
        path: /etc/rc.d/rc-wg.local
        state: present
        create: true
        line: "{{ openwisp2_wireguard_path }}/update_wireguard.sh bring_up_interface # {{ openwisp2_wireguard_vpn_uuid }}"
        mode: 0755
        group: "{{ openwisp_group }}"
    - name: systemctl daemon-reload
      command: systemctl daemon-reload
      changed_when: false
    - name: Enable rc-wg service
      service:
        name: rc-wg
        enabled: true
        state: started
  tags: [wireguard]

- name: update_vxlan.py
  ansible.builtin.copy:
    src: update_scripts/update_vxlan.py
    dest: "{{ openwisp2_wireguard_path }}/update_vxlan.py"
    mode: 0750
    group: "{{ openwisp_group }}"
  tags: [wireguard, updater_script]
  notify: reload supervisor

- name: Add wireguard_update.sh script to cron
  cron:
    name: Run update wireguard periodically {{ openwisp2_wireguard_vpn_uuid }}
    minute: "{{ openwisp2_wireguard_crontab.minute }}"
    hour: "{{ openwisp2_wireguard_crontab.hour }}"
    day: "{{ openwisp2_wireguard_crontab.day_of_month }}"
    month: "{{ openwisp2_wireguard_crontab.month }}"
    weekday: "{{ openwisp2_wireguard_crontab.day_of_week }}"
    job: "{{ openwisp2_wireguard_path }}/update_wireguard.sh check_config"
    state: present
    user: "{{ openwisp_user }}"
  tags: [wireguard, updater_script]

- name: Deploy VPN updater flask app
  notify: reload supervisor
  template:
    src: flask/vpn_updater.py
    dest: "{{ openwisp2_wireguard_path }}/vpn_updater.py"
    group: "{{ openwisp_group }}"
    mode: 0754
  tags: [flask]


- name: "[Ubuntu/Debian] Set extension and path for supervisor configuration"
  set_fact:
    supervisord_conf_extension: "conf"
    supervisor_conf_path: "/etc/supervisor/conf.d"
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: Supervisor flask config
  template:
    src: supervisor/vpn_updater.j2
    dest: "{{ supervisor_conf_path }}/flask_vpn_updater_{{ openwisp2_wireguard_vpn_uuid }}.{{ supervisord_conf_extension }}"
    mode: 0744
  notify: reload supervisor
  tags: [flask]
